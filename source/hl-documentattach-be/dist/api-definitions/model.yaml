swagger: "2.0"
info:
  description: "This is Course Backend API"
  version: "1.0.0"
  title: "Course"
  termsOfService: "http://hnn/terms"
  contact:
    email: "info@hnn.com"  
host: "localhost:5001"
basePath: "/"
tags:
- name: "course"
  description: "Everything about your Courses"
schemes:
- "http"
- "https"
paths:
  /course:
    post:
      tags:
      - "course"
      summary: "Add a new course or update existing course"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "course object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Course"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "Invalid parameters"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /course/search/{searchTerm}/{userEmail}:
    get:
      tags:
      - "course"
      summary: "Find course by searchTerm + userEmail"
      description: "Returns a list of course"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "searchTerm"
        in: "path"
        description: "search term"
        required: true
        type: "string"
      - name: "userEmail"
        in: "path"
        description: "user email"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "Invalid parameters"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  /course/{id}/{userEmail}:
    get:
      tags:
      - "course"
      summary: "Get course by id + userEmail"
      description: "Returns a course by id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "course Id"
        required: true
        type: "string"
      - name: "userEmail"
        in: "path"
        description: "user email"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "Invalid parameters supplied"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ApiResponse"            
    delete:
      tags:
      - "course"
      summary: "Deletes a course"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "course Id"
        required: true
        type: "string"
      - name: "userEmail"
        in: "path"
        description: "user email"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Course"
        400:
          description: "Invalid parameters supplied"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/ApiResponse"            
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 6
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    example:
      name: "name"
      id: 1
    xml:
      name: "Tag"
  Course:
    type: "object"
    required:
    - "name"
    - "code"
    properties:
      name:
        type: "string"
        example: "Advanced Math"
      code:
        type: "string"
        example: "M01"
      description:
        type: "string"
        example: "Advaned Math for College & Univ"
      learningMethod:
        type: "integer"
        enum:
        - "Self-paced"
        - "Tutor-paced"
      createdDate:
        type: "string"
        example: "01/01/2000"
    example:
      name: "Advanced Math"
      code: "M01"
      description: "Advaned Math for College & Univ"
      createdDate: "01/01/2000"
    xml:
      name: "Course"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
    example:
      code: 0
      type: "type"
      message: "message"
